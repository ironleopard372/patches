From e8bf2b468311c883ba8a64ee6d20169017d2c255 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Wed, 2 Sep 2020 11:06:30 -0700
Subject: [PATCH 1/4] Revert "arm64: dts: mt8183: add scp node"

This reverts commit 0d5e41709f7629f95874c1e42a60f5fd21f1ad29.

Broken:

arch/arm64/boot/dts/mediatek/mt8183.dtsi:342.21-352.5: ERROR
(phandle_references): /soc/scp@10500000: Reference to non-existent node
or label "scp_mem_reserved"

ERROR: Input tree has errors, aborting (use -f to force output)

Link: https://lore.kernel.org/lkml/CA+G9fYt9AujG6gyfeV5AaAv0EgggUfGT1jow8DJjVfetVWV3EA@mail.gmail.com/
Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 arch/arm64/boot/dts/mediatek/mt8183-evb.dts | 11 -----------
 arch/arm64/boot/dts/mediatek/mt8183.dtsi    | 12 ------------
 2 files changed, 23 deletions(-)

diff --git a/arch/arm64/boot/dts/mediatek/mt8183-evb.dts b/arch/arm64/boot/dts/mediatek/mt8183-evb.dts
index cba2d8933e79..ae405bd8f06b 100644
--- a/arch/arm64/boot/dts/mediatek/mt8183-evb.dts
+++ b/arch/arm64/boot/dts/mediatek/mt8183-evb.dts
@@ -25,17 +25,6 @@ memory@40000000 {
 	chosen {
 		stdout-path = "serial0:921600n8";
 	};
-
-	reserved-memory {
-		#address-cells = <2>;
-		#size-cells = <2>;
-		ranges;
-		scp_mem_reserved: scp_mem_region {
-			compatible = "shared-dma-pool";
-			reg = <0 0x50000000 0 0x2900000>;
-			no-map;
-		};
-	};
 };
 
 &auxadc {
diff --git a/arch/arm64/boot/dts/mediatek/mt8183.dtsi b/arch/arm64/boot/dts/mediatek/mt8183.dtsi
index f9b60e3d085c..102105871db2 100644
--- a/arch/arm64/boot/dts/mediatek/mt8183.dtsi
+++ b/arch/arm64/boot/dts/mediatek/mt8183.dtsi
@@ -339,18 +339,6 @@ pwrap: pwrap@1000d000 {
 			clock-names = "spi", "wrap";
 		};
 
-		scp: scp@10500000 {
-			compatible = "mediatek,mt8183-scp";
-			reg = <0 0x10500000 0 0x80000>,
-			      <0 0x105c0000 0 0x19080>;
-			reg-names = "sram", "cfg";
-			interrupts = <GIC_SPI 174 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&infracfg CLK_INFRA_SCPSYS>;
-			clock-names = "main";
-			memory-region = <&scp_mem_reserved>;
-			status = "disabled";
-		};
-
 		systimer: timer@10017000 {
 			compatible = "mediatek,mt8183-timer",
 				     "mediatek,mt6765-timer";
-- 
2.28.0


From 3432833502fd6034aef7096bdf8148511fa1c3a6 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Sun, 17 May 2020 01:04:44 -0700
Subject: [PATCH 2/4] drm/vc4: hdmi: Use proper enum in vc4_hdmi_{read,write}

Clang warns a lot along the lines of:

drivers/gpu/drm/vc4/vc4_hdmi.c:102:13: warning: implicit conversion from
enumeration type 'enum vc4_hdmi_field' to different enumeration type
'enum vc4_hdmi_regs' [-Wenum-conversion]

HDMI_WRITE and HDMI_READ are only ever used with types of vc4_hdmi_field
so use that type. The names of the variables are a little wonky now but
I wanted to go with the simplest fix.

Fixes: 311e305fdb4e ("drm/vc4: hdmi: Implement a register layout abstraction")
Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi_regs.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi_regs.h b/drivers/gpu/drm/vc4/vc4_hdmi_regs.h
index a5f1354e3e06..f5d36b31fa65 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi_regs.h
+++ b/drivers/gpu/drm/vc4/vc4_hdmi_regs.h
@@ -392,7 +392,7 @@ void __iomem *__vc4_hdmi_get_field_base(struct vc4_hdmi *hdmi,
 }
 
 static inline u32 vc4_hdmi_read(struct vc4_hdmi *hdmi,
-				enum vc4_hdmi_regs reg)
+				enum vc4_hdmi_field reg)
 {
 	const struct vc4_hdmi_register *field;
 	const struct vc4_hdmi_variant *variant = hdmi->variant;
@@ -417,7 +417,7 @@ static inline u32 vc4_hdmi_read(struct vc4_hdmi *hdmi,
 #define HDMI_READ(reg)		vc4_hdmi_read(vc4_hdmi, reg)
 
 static inline void vc4_hdmi_write(struct vc4_hdmi *hdmi,
-				  enum vc4_hdmi_regs reg,
+				  enum vc4_hdmi_field reg,
 				  u32 value)
 {
 	const struct vc4_hdmi_register *field;
-- 
2.28.0


From aed723e11ca895b26456126cd541abaf1993e798 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Tue, 8 Sep 2020 23:07:37 -0700
Subject: [PATCH 3/4] drm/vc4: Fix missing parentheses around conditional in
 vc4_plane_mode_set

Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 drivers/gpu/drm/vc4/vc4_plane.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_plane.c b/drivers/gpu/drm/vc4/vc4_plane.c
index 24d7e6db6fdd..89543fa8ca4d 100644
--- a/drivers/gpu/drm/vc4/vc4_plane.c
+++ b/drivers/gpu/drm/vc4/vc4_plane.c
@@ -898,8 +898,8 @@ static int vc4_plane_mode_set(struct drm_plane *plane,
 		vc4_dlist_write(vc4_state,
 				VC4_SET_FIELD(state->alpha >> 4,
 					      SCALER5_CTL2_ALPHA) |
-				fb->format->has_alpha ?
-					SCALER5_CTL2_ALPHA_PREMULT : 0 |
+				(fb->format->has_alpha ?
+					SCALER5_CTL2_ALPHA_PREMULT : 0) |
 				(mix_plane_alpha ?
 					SCALER5_CTL2_ALPHA_MIX : 0) |
 				VC4_SET_FIELD(fb->format->has_alpha ?
-- 
2.28.0


From 2400406077025517531a3a03250c1eaccf83944d Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Wed, 2 Sep 2020 15:51:52 -0700
Subject: [PATCH 4/4] arm64: defconfig: Disable DEBUG_INFO

The integrated assembler is really noisy when building debug info in
DWARF2 and I do not plan on debugging this kernel in gdb.

Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 arch/arm64/configs/defconfig | 1 -
 1 file changed, 1 deletion(-)

diff --git a/arch/arm64/configs/defconfig b/arch/arm64/configs/defconfig
index 4e2b54e1cc1a..d143adcf1270 100644
--- a/arch/arm64/configs/defconfig
+++ b/arch/arm64/configs/defconfig
@@ -1058,7 +1058,6 @@ CONFIG_CRYPTO_DEV_HISI_ZIP=m
 CONFIG_CRYPTO_DEV_HISI_HPRE=m
 CONFIG_CMA_SIZE_MBYTES=32
 CONFIG_PRINTK_TIME=y
-CONFIG_DEBUG_INFO=y
 CONFIG_MAGIC_SYSRQ=y
 CONFIG_DEBUG_FS=y
 CONFIG_DEBUG_KERNEL=y
-- 
2.28.0

