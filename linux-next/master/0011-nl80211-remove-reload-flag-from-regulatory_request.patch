From 34eeed6541ff5b3ffb0f5ed0d3c828d1cdf083e3 Mon Sep 17 00:00:00 2001
From: Finn Behrens <me@kloenk.de>
Date: Wed, 1 Dec 2021 13:49:18 +0100
Subject: [PATCH 11/17] nl80211: remove reload flag from regulatory_request

This removes the previously unused reload flag, which was introduced in
1eda919126b4.
The request is handled as NL80211_REGDOM_SET_BY_CORE, which is parsed
unconditionally.

Reported-by: kernel test robot <lkp@intel.com>
Reported-by: Nathan Chancellor <nathan@kernel.org>
Fixes: 1eda919126b4 ("nl80211: reset regdom when reloading regdb")
Link: https://lore.kernel.org/all/YaZuKYM5bfWe2Urn@archlinux-ax161/
Signed-off-by: Finn Behrens <me@kloenk.de>
Reviewed-by: Nathan Chancellor <nathan@kernel.org>
Link: https://lore.kernel.org/r/YadvTolO8rQcNCd/@gimli.kloenk.dev
---
 include/net/regulatory.h | 1 -
 net/wireless/reg.c       | 6 ++----
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/include/net/regulatory.h b/include/net/regulatory.h
index 0cf9335431e0..47f06f6f5a67 100644
--- a/include/net/regulatory.h
+++ b/include/net/regulatory.h
@@ -83,7 +83,6 @@ struct regulatory_request {
 	enum nl80211_dfs_regions dfs_region;
 	bool intersect;
 	bool processed;
-	bool reload;
 	enum environment_cap country_ie_env;
 	struct list_head list;
 };
diff --git a/net/wireless/reg.c b/net/wireless/reg.c
index 61f1bf1bc4a7..8148a3b5f607 100644
--- a/net/wireless/reg.c
+++ b/net/wireless/reg.c
@@ -1134,9 +1134,8 @@ int reg_reload_regdb(void)
 	request->wiphy_idx = WIPHY_IDX_INVALID;
 	request->alpha2[0] = current_regdomain->alpha2[0];
 	request->alpha2[1] = current_regdomain->alpha2[1];
-	request->initiator = NL80211_USER_REG_HINT_USER;
+	request->initiator = NL80211_REGDOM_SET_BY_CORE;
 	request->user_reg_hint_type = NL80211_USER_REG_HINT_USER;
-	request->reload = true;
 
 	reg_process_hint(request);
 
@@ -2712,8 +2711,7 @@ reg_process_hint_user(struct regulatory_request *user_request)
 
 	treatment = __reg_process_hint_user(user_request);
 	if (treatment == REG_REQ_IGNORE ||
-	    (treatment == REG_REQ_ALREADY_SET &&
-	     !user_request->reload))
+	    treatment == REG_REQ_ALREADY_SET)
 		return REG_REQ_IGNORE;
 
 	user_request->intersect = treatment == REG_REQ_INTERSECT;
-- 
2.34.1

