From 92c14f98468467632cfc0f23efd73b4715afabbe Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Fri, 18 Jun 2021 16:11:14 -0700
Subject: [PATCH 16/16] mm: Make CONFIG_ZBUD depend on CONFIG_ZPOOL

Link: https://lore.kernel.org/r/813ac556-4a48-1e29-ad87-1ddb74546ef1@huawei.com/
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 mm/Kconfig | 1 +
 mm/zbud.c  | 9 ---------
 2 files changed, 1 insertion(+), 9 deletions(-)

diff --git a/mm/Kconfig b/mm/Kconfig
index 8f748010f7ea..5dc28e9205e0 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -674,6 +674,7 @@ config ZPOOL
 
 config ZBUD
 	tristate "Low (Up to 2x) density storage for compressed pages"
+	depends on ZPOOL
 	help
 	  A special purpose allocator for storing compressed pages.
 	  It is designed to store up to two compressed pages per physical
diff --git a/mm/zbud.c b/mm/zbud.c
index 3f61304405cb..40ee0e53246b 100644
--- a/mm/zbud.c
+++ b/mm/zbud.c
@@ -111,10 +111,8 @@ struct zbud_pool {
 	struct list_head lru;
 	u64 pages_nr;
 	const struct zbud_ops *ops;
-#ifdef CONFIG_ZPOOL
 	struct zpool *zpool;
 	const struct zpool_ops *zpool_ops;
-#endif
 };
 
 /*
@@ -526,8 +524,6 @@ static u64 zbud_get_pool_size(struct zbud_pool *pool)
  * zpool
  ****************/
 
-#ifdef CONFIG_ZPOOL
-
 static int zbud_zpool_evict(struct zbud_pool *pool, unsigned long handle)
 {
 	if (pool->zpool && pool->zpool_ops && pool->zpool_ops->evict)
@@ -618,7 +614,6 @@ static struct zpool_driver zbud_zpool_driver = {
 };
 
 MODULE_ALIAS("zpool-zbud");
-#endif /* CONFIG_ZPOOL */
 
 static int __init init_zbud(void)
 {
@@ -626,18 +621,14 @@ static int __init init_zbud(void)
 	BUILD_BUG_ON(sizeof(struct zbud_header) > ZHDR_SIZE_ALIGNED);
 	pr_info("loaded\n");
 
-#ifdef CONFIG_ZPOOL
 	zpool_register_driver(&zbud_zpool_driver);
-#endif
 
 	return 0;
 }
 
 static void __exit exit_zbud(void)
 {
-#ifdef CONFIG_ZPOOL
 	zpool_unregister_driver(&zbud_zpool_driver);
-#endif
 
 	pr_info("unloaded\n");
 }
-- 
2.32.0.93.g670b81a890

