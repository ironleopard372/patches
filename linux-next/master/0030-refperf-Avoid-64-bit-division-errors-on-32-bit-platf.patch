From eae3e2bf831fb15c4ed13494249b38335d5fb3d0 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Thu, 28 May 2020 13:53:49 -0700
Subject: [PATCH 30/30] refperf: Avoid 64-bit division errors on 32-bit
 platforms

Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 kernel/rcu/refperf.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/kernel/rcu/refperf.c b/kernel/rcu/refperf.c
index ab57da04342f..059a7aefabc2 100644
--- a/kernel/rcu/refperf.c
+++ b/kernel/rcu/refperf.c
@@ -406,7 +406,8 @@ static int main_func(void *arg)
 		if (torture_must_stop())
 			goto end;
 
-		result_avg[exp] = 1000 * process_durations(nreaders) / (nreaders * loops);
+		result_avg[exp] = div64_ul(1000 * process_durations(nreaders),
+					   nreaders * loops);
 	}
 
 	// Print the average of all experiments
@@ -417,9 +418,12 @@ static int main_func(void *arg)
 	strcat(buf, "Runs\tTime(ns)\n");
 
 	for (exp = 0; exp < nruns; exp++) {
+		u64 result;
+		u32 remain;
 		if (errexit)
 			break;
-		sprintf(buf1, "%d\t%llu.%03d\n", exp + 1, result_avg[exp] / 1000, (int)(result_avg[exp] % 1000));
+		result = div_u64_rem(result_avg[exp], 1000, &remain);
+		sprintf(buf1, "%d\t%llu.%03u\n", exp + 1, result, remain);
 		strcat(buf, buf1);
 	}
 
-- 
2.27.0.rc0

