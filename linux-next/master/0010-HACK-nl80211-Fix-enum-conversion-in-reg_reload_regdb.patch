From 1e06f3793d7a25e61f1fdc6c7ce3a2da144c5b2e Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Tue, 30 Nov 2021 14:42:12 -0700
Subject: [PATCH 10/18] HACK: nl80211: Fix enum conversion in
 reg_reload_regdb()

Clang warns:

net/wireless/reg.c:1137:23: error: implicit conversion from enumeration type 'enum nl80211_user_reg_hint_type' to different enumeration type 'enum nl80211_reg_initiator' [-Werror,-Wenum-conversion]
        request->initiator = NL80211_USER_REG_HINT_USER;
                           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.

Link: https://lore.kernel.org/r/YaZLEEj2pUU%2FDhZD@archlinux-ax161/
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 include/net/regulatory.h | 1 -
 net/wireless/reg.c       | 6 ++----
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/include/net/regulatory.h b/include/net/regulatory.h
index 0cf9335431e0..47f06f6f5a67 100644
--- a/include/net/regulatory.h
+++ b/include/net/regulatory.h
@@ -83,7 +83,6 @@ struct regulatory_request {
 	enum nl80211_dfs_regions dfs_region;
 	bool intersect;
 	bool processed;
-	bool reload;
 	enum environment_cap country_ie_env;
 	struct list_head list;
 };
diff --git a/net/wireless/reg.c b/net/wireless/reg.c
index 61f1bf1bc4a7..8148a3b5f607 100644
--- a/net/wireless/reg.c
+++ b/net/wireless/reg.c
@@ -1134,9 +1134,8 @@ int reg_reload_regdb(void)
 	request->wiphy_idx = WIPHY_IDX_INVALID;
 	request->alpha2[0] = current_regdomain->alpha2[0];
 	request->alpha2[1] = current_regdomain->alpha2[1];
-	request->initiator = NL80211_USER_REG_HINT_USER;
+	request->initiator = NL80211_REGDOM_SET_BY_CORE;
 	request->user_reg_hint_type = NL80211_USER_REG_HINT_USER;
-	request->reload = true;
 
 	reg_process_hint(request);
 
@@ -2712,8 +2711,7 @@ reg_process_hint_user(struct regulatory_request *user_request)
 
 	treatment = __reg_process_hint_user(user_request);
 	if (treatment == REG_REQ_IGNORE ||
-	    (treatment == REG_REQ_ALREADY_SET &&
-	     !user_request->reload))
+	    treatment == REG_REQ_ALREADY_SET)
 		return REG_REQ_IGNORE;
 
 	user_request->intersect = treatment == REG_REQ_INTERSECT;
-- 
2.34.1

