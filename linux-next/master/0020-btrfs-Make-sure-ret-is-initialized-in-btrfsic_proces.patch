From ad2d33d07b89bc0adf3f2b57075a3c74a1b326b8 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Sun, 23 Feb 2020 21:44:39 -0700
Subject: [PATCH 20/30] btrfs: Make sure ret is initialized in
 btrfsic_process_superblock_dev_mirror

Clang warns:

../fs/btrfs/check-integrity.c:836:17: warning: variable 'ret' is used
uninitialized whenever 'for' loop exits because its condition is false
[-Wsometimes-uninitialized]
        for (pass = 0; pass < 3; pass++) {
                       ^~~~~~~~
../fs/btrfs/check-integrity.c:916:9: note: uninitialized use occurs here
        return ret;
               ^~~
../fs/btrfs/check-integrity.c:836:17: note: remove the condition if it
is always true
        for (pass = 0; pass < 3; pass++) {
                       ^~~~~~~~
../fs/btrfs/check-integrity.c:769:9: note: initialize the variable 'ret'
to silence this warning
        int ret;
               ^
                = 0
1 warning generated.

Link: https://lore.kernel.org/lkml/20200224095735.179fe582@canb.auug.org.au/
Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 fs/btrfs/check-integrity.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/fs/btrfs/check-integrity.c b/fs/btrfs/check-integrity.c
index 32e11a23b47f..3f9e0ccdfedc 100644
--- a/fs/btrfs/check-integrity.c
+++ b/fs/btrfs/check-integrity.c
@@ -779,12 +779,12 @@ static int btrfsic_process_superblock_dev_mirror(
 
 	super_tmp = page_address(page);
 
+	ret = 0;
 	if (btrfs_super_bytenr(super_tmp) != dev_bytenr ||
 	    btrfs_super_magic(super_tmp) != BTRFS_MAGIC ||
 	    memcmp(device->uuid, super_tmp->dev_item.uuid, BTRFS_UUID_SIZE) ||
 	    btrfs_super_nodesize(super_tmp) != state->metablock_size ||
 	    btrfs_super_sectorsize(super_tmp) != state->datablock_size) {
-		ret = 0;
 		goto out;
 	}
 
-- 
2.26.0.rc1

