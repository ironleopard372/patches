From dc67fd6e533dd085c3d77fdbeb82312ff6cb5aed Mon Sep 17 00:00:00 2001
From: Matthias Kaehlcke <mka@chromium.org>
Date: Fri, 15 Mar 2019 13:54:50 -0700
Subject: [PATCH 20/20] lib: Add shared copy of __lshrti3 from libgcc

The compiler may emit calls to __lshrti3 from the compiler runtime
library, which results in undefined references:

arch/x86/kvm/x86.o: In function `mul_u64_u64_shr':
  include/linux/math64.h:186: undefined reference to `__lshrti3'

Add a copy of the __lshrti3 libgcc routine (from gcc v4.9.2).

Include the function for x86 builds with clang, which is the
environment where the above error was observed.

Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
Link: https://lore.kernel.org/r/CAG5bF+S6OvBnsaR6UpMCqjDR9_hMo6qRMHGiW+iCaRYQW4C3YA@mail.gmail.com
Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 arch/x86/Kconfig       |  1 +
 include/linux/libgcc.h | 16 ++++++++++++++++
 lib/Kconfig            |  3 +++
 lib/Makefile           |  1 +
 lib/lshrti3.c          | 31 +++++++++++++++++++++++++++++++
 5 files changed, 52 insertions(+)
 create mode 100644 lib/lshrti3.c

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index f6946b81f74a..9fe1122e4a34 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -124,6 +124,7 @@ config X86
 	select GENERIC_IRQ_PROBE
 	select GENERIC_IRQ_RESERVATION_MODE
 	select GENERIC_IRQ_SHOW
+	select GENERIC_LIB_LSHRTI3		if CC_IS_CLANG
 	select GENERIC_PENDING_IRQ		if SMP
 	select GENERIC_PTDUMP
 	select GENERIC_SMP_IDLE_THREAD
diff --git a/include/linux/libgcc.h b/include/linux/libgcc.h
index b8dc75f0c830..f3889b596d29 100644
--- a/include/linux/libgcc.h
+++ b/include/linux/libgcc.h
@@ -9,15 +9,26 @@
 #include <asm/byteorder.h>
 
 typedef int word_type __attribute__ ((mode (__word__)));
+typedef int TItype __attribute__ ((mode (TI)));
 
 #ifdef __BIG_ENDIAN
 struct DWstruct {
 	int high, low;
 };
+
+struct DWstruct128 {
+	long long high, low;
+};
+
 #elif defined(__LITTLE_ENDIAN)
 struct DWstruct {
 	int low, high;
 };
+
+struct DWstruct128 {
+	long long low, high;
+};
+
 #else
 #error I feel sick.
 #endif
@@ -27,4 +38,9 @@ typedef union {
 	long long ll;
 } DWunion;
 
+typedef union {
+	struct DWstruct128 s;
+	TItype ll;
+} DWunion128;
+
 #endif /* __ASM_LIBGCC_H */
diff --git a/lib/Kconfig b/lib/Kconfig
index 18d76b6e4800..f73ba169dbe1 100644
--- a/lib/Kconfig
+++ b/lib/Kconfig
@@ -686,6 +686,9 @@ config GENERIC_LIB_ASHRDI3
 config GENERIC_LIB_LSHRDI3
 	bool
 
+config GENERIC_LIB_LSHRTI3
+	bool
+
 config GENERIC_LIB_MULDI3
 	bool
 
diff --git a/lib/Makefile b/lib/Makefile
index 5ca03ba6ee45..f2b79f9d445a 100644
--- a/lib/Makefile
+++ b/lib/Makefile
@@ -340,6 +340,7 @@ obj-$(CONFIG_PARMAN) += parman.o
 obj-$(CONFIG_GENERIC_LIB_ASHLDI3) += ashldi3.o
 obj-$(CONFIG_GENERIC_LIB_ASHRDI3) += ashrdi3.o
 obj-$(CONFIG_GENERIC_LIB_LSHRDI3) += lshrdi3.o
+obj-$(CONFIG_GENERIC_LIB_LSHRTI3) += lshrti3.o
 obj-$(CONFIG_GENERIC_LIB_MULDI3) += muldi3.o
 obj-$(CONFIG_GENERIC_LIB_CMPDI2) += cmpdi2.o
 obj-$(CONFIG_GENERIC_LIB_UCMPDI2) += ucmpdi2.o
diff --git a/lib/lshrti3.c b/lib/lshrti3.c
new file mode 100644
index 000000000000..2d2123bb3030
--- /dev/null
+++ b/lib/lshrti3.c
@@ -0,0 +1,31 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <linux/export.h>
+#include <linux/libgcc.h>
+
+long long __lshrti3(long long u, word_type b)
+{
+	DWunion128 uu, w;
+	word_type bm;
+
+	if (b == 0)
+		return u;
+
+	uu.ll = u;
+	bm = 64 - b;
+
+	if (bm <= 0) {
+		w.s.high = 0;
+		w.s.low = (unsigned long long) uu.s.high >> -bm;
+	} else {
+		const unsigned long long carries =
+			(unsigned long long) uu.s.high << bm;
+		w.s.high = (unsigned long long) uu.s.high >> b;
+		w.s.low = ((unsigned long long) uu.s.low >> b) | carries;
+	}
+
+	return w.ll;
+}
+#ifndef BUILD_VDSO
+EXPORT_SYMBOL(__lshrti3);
+#endif
-- 
2.29.0.rc1

