From c6a39c880ca3acccbd9e741f8424b4d08e384092 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Sun, 8 Dec 2019 12:53:24 -0700
Subject: [PATCH 16/19] netfilter: Apply Pablo's tentative patch

Link: https://lore.kernel.org/lkml/20191207164111.fpnpoipaiadaxyde@salvia/
Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 include/net/flow_dissector.h          | 11 +++++++++--
 net/core/flow_dissector.c             |  2 +-
 net/netfilter/nf_flow_table_offload.c |  4 ++--
 3 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/include/net/flow_dissector.h b/include/net/flow_dissector.h
index d93017a7ce5c..92c27ba37e33 100644
--- a/include/net/flow_dissector.h
+++ b/include/net/flow_dissector.h
@@ -189,10 +189,17 @@ struct flow_dissector_key_eth_addrs {
 
 /**
  * struct flow_dissector_key_tcp:
- * @flags: flags
+ * @flags: TCP flags (16-bit, including the initial Data offset field bits)
+ * @word: Data offset + reserved bits + TCP flags + window
  */
 struct flow_dissector_key_tcp {
-	__be16 flags;
+	union {
+		struct {
+			__be16 flags;
+			__be16 __pad;
+		};
+		__be32	flag_word;
+	};
 };
 
 /**
diff --git a/net/core/flow_dissector.c b/net/core/flow_dissector.c
index 2dbbb030fbed..95705edf2460 100644
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -756,7 +756,7 @@ __skb_flow_dissect_tcp(const struct sk_buff *skb,
 	key_tcp = skb_flow_dissector_target(flow_dissector,
 					    FLOW_DISSECTOR_KEY_TCP,
 					    target_container);
-	key_tcp->flags = (*(__be16 *) &tcp_flag_word(th) & htons(0x0FFF));
+	key_tcp->flag_word = tcp_flag_word(th);
 }
 
 static void
diff --git a/net/netfilter/nf_flow_table_offload.c b/net/netfilter/nf_flow_table_offload.c
index de7a0d1e15c8..343c75e096e1 100644
--- a/net/netfilter/nf_flow_table_offload.c
+++ b/net/netfilter/nf_flow_table_offload.c
@@ -87,8 +87,8 @@ static int nf_flow_rule_match(struct nf_flow_match *match,
 
 	switch (tuple->l4proto) {
 	case IPPROTO_TCP:
-		key->tcp.flags = 0;
-		mask->tcp.flags = TCP_FLAG_RST | TCP_FLAG_FIN;
+		key->tcp.flag_word = 0;
+		mask->tcp.flag_word = TCP_FLAG_RST | TCP_FLAG_FIN;
 		match->dissector.used_keys |= BIT(FLOW_DISSECTOR_KEY_TCP);
 		break;
 	case IPPROTO_UDP:
-- 
2.24.1

