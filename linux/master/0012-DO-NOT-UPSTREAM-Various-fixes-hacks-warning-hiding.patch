From 0e749e8f1784c0f1a61166d68fef9c5cd8029a92 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Wed, 17 Feb 2021 13:47:46 -0700
Subject: [PATCH 12/13] DO-NOT-UPSTREAM: Various fixes/hacks/warning hiding

* drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c: Hide an overflow warning.

* drivers/input/joystick/analog.c: Avoid this warning on s390.

* drivers/net/ethernet/marvell/mvpp2/mvpp2.h: Hide an overflow warning.

* include/linux/surface_aggregator/device.h: Hide an overflow warning
  that is intentional.

* lib/Kconfig.debug: Disable -Wframe-larger-than=. Getting all of these
  fixed is a long term project.
  drivers/gpu/drm/amd/display/dc/dml/Makefile is modified for the same
  reason.

* scripts/checksyscalls.sh: I do not care for this warning.

Link: https://github.com/ClangBuiltLinux/linux/labels/-Wframe-larger-than%3D
Link: https://github.com/ClangBuiltLinux/linux/issues/997
Link: https://github.com/ClangBuiltLinux/linux/issues/1366
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 drivers/gpu/drm/amd/display/dc/dml/Makefile | 2 +-
 drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c   | 2 +-
 drivers/input/joystick/analog.c             | 1 -
 drivers/net/ethernet/marvell/mvpp2/mvpp2.h  | 2 +-
 include/linux/surface_aggregator/device.h   | 2 +-
 lib/Kconfig.debug                           | 3 ++-
 scripts/checksyscalls.sh                    | 2 +-
 7 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/dc/dml/Makefile b/drivers/gpu/drm/amd/display/dc/dml/Makefile
index 6bb7f2905821..a12361f2cf1e 100644
--- a/drivers/gpu/drm/amd/display/dc/dml/Makefile
+++ b/drivers/gpu/drm/amd/display/dc/dml/Makefile
@@ -60,7 +60,7 @@ CFLAGS_$(AMDDALPATH)/dc/dml/dcn20/display_mode_vba_20v2.o := $(dml_ccflags)
 CFLAGS_$(AMDDALPATH)/dc/dml/dcn20/display_rq_dlg_calc_20v2.o := $(dml_ccflags)
 CFLAGS_$(AMDDALPATH)/dc/dml/dcn21/display_mode_vba_21.o := $(dml_ccflags)
 CFLAGS_$(AMDDALPATH)/dc/dml/dcn21/display_rq_dlg_calc_21.o := $(dml_ccflags)
-CFLAGS_$(AMDDALPATH)/dc/dml/dcn30/display_mode_vba_30.o := $(dml_ccflags) -Wframe-larger-than=2048
+CFLAGS_$(AMDDALPATH)/dc/dml/dcn30/display_mode_vba_30.o := $(dml_ccflags)
 CFLAGS_$(AMDDALPATH)/dc/dml/dcn30/display_rq_dlg_calc_30.o := $(dml_ccflags)
 CFLAGS_$(AMDDALPATH)/dc/dml/display_mode_lib.o := $(dml_ccflags)
 CFLAGS_REMOVE_$(AMDDALPATH)/dc/dml/display_mode_vba.o := $(dml_rcflags)
diff --git a/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c b/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c
index e76ce40a12ab..dad91b905a87 100644
--- a/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c
+++ b/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c
@@ -972,7 +972,7 @@ const struct msm_dsi_phy_cfg dsi_phy_7nm_cfgs = {
 		.restore_pll_state = dsi_7nm_pll_restore_state,
 	},
 	.min_pll_rate = 600000000UL,
-	.max_pll_rate = (5000000000ULL < ULONG_MAX) ? 5000000000ULL : ULONG_MAX,
+	.max_pll_rate = (5000000000ULL < ULONG_MAX) ? (unsigned long)5000000000ULL : ULONG_MAX,
 	.io_start = { 0xae94400, 0xae96400 },
 	.num_dsi_phy = 2,
 	.quirks = DSI_PHY_7NM_QUIRK_V4_1,
diff --git a/drivers/input/joystick/analog.c b/drivers/input/joystick/analog.c
index f798922a4598..dea166758af1 100644
--- a/drivers/input/joystick/analog.c
+++ b/drivers/input/joystick/analog.c
@@ -157,7 +157,6 @@ static unsigned long analog_faketime = 0;
 #define GET_TIME(x)     do { x = analog_faketime++; } while(0)
 #define DELTA(x,y)	((y)-(x))
 #define TIME_NAME	"Unreliable"
-#warning Precise timer not defined for this architecture.
 #endif
 
 static inline u64 get_time(void)
diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2.h b/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
index 8edba5ea90f0..79cb1a0f13a0 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
@@ -832,7 +832,7 @@
 
 /* RX buffer constants */
 #define MVPP2_SKB_SHINFO_SIZE \
-	SKB_DATA_ALIGN(sizeof(struct skb_shared_info))
+	SKB_DATA_ALIGN(((int)(sizeof(struct skb_shared_info))))
 
 #define MVPP2_RX_PKT_SIZE(mtu) \
 	ALIGN((mtu) + MVPP2_MH_SIZE + MVPP2_VLAN_TAG_LEN + \
diff --git a/include/linux/surface_aggregator/device.h b/include/linux/surface_aggregator/device.h
index 4441ad667c3f..41e1f0d83865 100644
--- a/include/linux/surface_aggregator/device.h
+++ b/include/linux/surface_aggregator/device.h
@@ -99,7 +99,7 @@ struct ssam_device_uid {
 	.domain   = d,								\
 	.category = cat,							\
 	.target   = ((tid) != SSAM_ANY_TID) ? (tid) : 0,			\
-	.instance = ((iid) != SSAM_ANY_IID) ? (iid) : 0,			\
+	.instance = ((iid) != SSAM_ANY_IID) ? (__u8)(iid) : 0,			\
 	.function = ((fun) != SSAM_ANY_FUN) ? (fun) : 0				\
 
 /**
diff --git a/lib/Kconfig.debug b/lib/Kconfig.debug
index 678c13967580..8e90f17cc47d 100644
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@ -332,8 +332,9 @@ config GDB_SCRIPTS
 endif # DEBUG_INFO
 
 config FRAME_WARN
-	int "Warn for stack frames larger than"
+	int "Warn for stack frames larger than" if !CC_IS_CLANG
 	range 0 8192
+	default 0 if CC_IS_CLANG
 	default 2048 if GCC_PLUGIN_LATENT_ENTROPY
 	default 1280 if (!64BIT && PARISC)
 	default 1024 if (!64BIT && !PARISC)
diff --git a/scripts/checksyscalls.sh b/scripts/checksyscalls.sh
index a18b47695f55..b3a6de55d18a 100755
--- a/scripts/checksyscalls.sh
+++ b/scripts/checksyscalls.sh
@@ -255,7 +255,7 @@ EOF
 syscall_list() {
     grep '^[0-9]' "$1" | sort -n |
 	while read nr abi name entry ; do
-		echo "#if !defined(__NR_${name}) && !defined(__IGNORE_${name})"
+		echo "#if 0"
 		echo "#warning syscall ${name} not implemented"
 		echo "#endif"
 	done
-- 
2.31.1.527.g2d677e5b15

