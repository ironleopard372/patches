From f8966ead1f81c0fd77f81c11f4d336712b2d35a8 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Thu, 18 Oct 2018 12:20:33 -0700
Subject: [PATCH 2/3] mISDN: Fix type of switch control variable in
 ctrl_teimanager

Clang warns:

drivers/isdn/mISDN/tei.c:1193:7: warning: overflow converting case value
to switch condition type (2147764552 to 18446744071562348872) [-Wswitch]
        case IMHOLD_L1:
             ^
./include/linux/mISDNif.h:340:19: note: expanded from macro 'IMHOLD_L1'
\#define IMHOLD_L1       _IOR('I', 72, int)
                        ^
./include/uapi/asm-generic/ioctl.h:86:28: note: expanded from macro
'_IOR'
\#define _IOR(type,nr,size)
_IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))
                                ^
./include/uapi/asm-generic/ioctl.h:70:2: note: expanded from macro
'_IOC'
        (((dir)  << _IOC_DIRSHIFT) | \
        ^
drivers/isdn/mISDN/tei.c:1187:7: warning: overflow converting case value
to switch condition type (2147764550 to 18446744071562348870) [-Wswitch]
        case IMCLEAR_L2:
             ^
./include/linux/mISDNif.h:338:20: note: expanded from macro 'IMCLEAR_L2'
\#define IMCLEAR_L2      _IOR('I', 70, int)
                        ^
./include/uapi/asm-generic/ioctl.h:86:28: note: expanded from macro
'_IOR'
\#define _IOR(type,nr,size)
_IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))
                                ^
./include/uapi/asm-generic/ioctl.h:70:2: note: expanded from macro
'_IOC'
        (((dir)  << _IOC_DIRSHIFT) | \
        ^
2 warnings generated.

Fix this by making val an unsigned integer.

Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 drivers/isdn/mISDN/tei.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/isdn/mISDN/tei.c b/drivers/isdn/mISDN/tei.c
index 12d9e5f4beb1..58635b5f296f 100644
--- a/drivers/isdn/mISDN/tei.c
+++ b/drivers/isdn/mISDN/tei.c
@@ -1180,8 +1180,7 @@ static int
 ctrl_teimanager(struct manager *mgr, void *arg)
 {
 	/* currently we only have one option */
-	int	*val = (int *)arg;
-	int	ret = 0;
+	unsigned int *val = (unsigned int *)arg;
 
 	switch (val[0]) {
 	case IMCLEAR_L2:
@@ -1197,9 +1196,9 @@ ctrl_teimanager(struct manager *mgr, void *arg)
 			test_and_clear_bit(OPTION_L1_HOLD, &mgr->options);
 		break;
 	default:
-		ret = -EINVAL;
+		return -EINVAL;
 	}
-	return ret;
+	return 0;
 }
 
 /* This function does create a L2 for fixed TEI in NT Mode */
-- 
2.19.1

