From aec7618da3de17af4a5d8eb331e9e7690a61bdaf Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Wed, 10 Mar 2021 16:32:31 -0700
Subject: [PATCH 12/12] blk-mq: Disable -Walign-mismatch in
 blk_mq_complete_request_remote

When compiling with clang-13:

block/blk-mq.c:630:39: warning: passing 8-byte aligned argument to
32-byte aligned parameter 2 of 'smp_call_function_single_async' may
result in an unaligned pointer access [-Walign-mismatch]
                smp_call_function_single_async(cpu, &rq->csd);
                                                    ^
1 warning generated.

This was purposefully done in commit 4ccafe032005 ("block: unalign
call_single_data in struct request") and there is no real bug here.
Disable the warning using the __diag_ignore infrastructure.

Link: https://github.com/ClangBuiltLinux/linux/issues/1328
Link: https://lore.kernel.org/r/20210310182307.zzcbi5w5jrmveld4@archlinux-ax161/
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 block/blk-mq.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/block/blk-mq.c b/block/blk-mq.c
index f285a9123a8b..2ab49415bacf 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -682,7 +682,10 @@ bool blk_mq_complete_request_remote(struct request *rq)
 
 	if (blk_mq_complete_need_ipi(rq)) {
 		INIT_CSD(&rq->csd, __blk_mq_complete_request_remote, rq);
+		__diag_push();
+		__diag_ignore(clang, 13, "-Walign-mismatch", "There is no issue with misalignment here");
 		smp_call_function_single_async(rq->mq_ctx->cpu, &rq->csd);
+		__diag_pop();
 	} else {
 		if (rq->q->nr_hw_queues > 1)
 			return false;
-- 
2.31.0

